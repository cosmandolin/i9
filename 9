def func4(arg17, arg18):
    def func5(arg19, arg20):
        var21 = -1665722108 - ((958 ^ 583) - arg19)
        var22 = var21 ^ arg19 & var21
        var23 = 115 ^ 1 - var22
        var24 = arg19 ^ var21
        var25 = arg20 & arg19
        result = arg20 | var21
        return result
    var26 = func5(arg18, arg17)
    var27 = arg17 - -1904580673
    var28 = -182 + arg18
    var29 = (var27 | arg18 ^ 627776933) ^ -19
    if arg18 < arg18:
        var30 = var26 | var29 ^ var29
    else:
        var30 = (arg17 & arg18) - -663 ^ arg17
    var31 = 203947489 ^ (var28 ^ -213 ^ var29)
    var32 = (var29 & arg17 | var27) & arg18
    if var31 < var29:
        var33 = (-928 ^ var29 | var32) + arg18
    else:
        var33 = var26 & ((var26 & var27) - -299)
    var34 = arg18 + -67 & var29
    var35 = (var31 ^ arg18) ^ var28 - var27
    var36 = (var26 - arg18 & arg18) | var28
    var37 = var32 ^ var34
    var38 = var29 + (842 | var34 - var34)
    var39 = var34 | var31
    var40 = var31 - var37
    var41 = arg18 & var27
    var42 = (var40 | 1422394558) ^ arg18 + arg18
    result = var31 - var26 | ((arg17 | arg18 + var39) + var34 ^ -453)
    return result
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var12 = func3(arg2, arg1)
    if var7 < arg2:
        var13 = arg2 & arg1
    else:
        var13 = (((-329721066 ^ arg1) | (arg2 + 273) & ((-267 ^ (arg2 + arg1)) + 1836502259) ^ ((((((arg2 | (arg1 + arg2 - var7 + var12 - 1585623493)) ^ arg1) + -754 + -63555137) - arg2) | -265) - var12)) - -1104610253) - 757
    var14 = 1406873537 ^ (1079536373 + arg2) + 891
    var15 = var12 ^ var14
    var16 = var7 | var12
    result = ((var12 & (var15 | (var15 ^ var14))) | var14 - (var12 + var14) & 288 & arg1 + arg1 | -722) & var16
    return result
def func3(arg8, arg9):
    var10 = 0
    for var11 in (-2 & i for i in xrange(4)):
        var10 += (var11 ^ -5) | 4
    return var10
def func2(arg3, arg4):
    var5 = 0
    for var6 in (arg3 & i ^ arg3 for i in range(1)):
        var5 += arg3 - arg4
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 4'
    print 'arg_number: 17'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 43'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,def func4(arg17, arg18):
    def func5(arg19, arg20):
        var21 = -1665722108 - ((958 ^ 583) - arg19)
        var22 = var21 ^ arg19 & var21
        var23 = 115 ^ 1 - var22
        var24 = arg19 ^ var21
        var25 = arg20 & arg19
        result = arg20 | var21
        return result
    var26 = func5(arg18, arg17)
    var27 = arg17 - -1904580673
    var28 = -182 + arg18
    var29 = (var27 | arg18 ^ 627776933) ^ -19
    if arg18 < arg18:
        var30 = var26 | var29 ^ var29
    else:
        var30 = (arg17 & arg18) - -663 ^ arg17
    var31 = 203947489 ^ (var28 ^ -213 ^ var29)
    var32 = (var29 & arg17 | var27) & arg18
    if var31 < var29:
        var33 = (-928 ^ var29 | var32) + arg18
    else:
        var33 = var26 & ((var26 & var27) - -299)
    var34 = arg18 + -67 & var29
    var35 = (var31 ^ arg18) ^ var28 - var27
    var36 = (var26 - arg18 & arg18) | var28
    var37 = var32 ^ var34
    var38 = var29 + (842 | var34 - var34)
    var39 = var34 | var31
    var40 = var31 - var37
    var41 = arg18 & var27
    var42 = (var40 | 1422394558) ^ arg18 + arg18
    result = var31 - var26 | ((arg17 | arg18 + var39) + var34 ^ -453)
    return result
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var12 = func3(arg2, arg1)
    if var7 < arg2:
        var13 = arg2 & arg1
    else:
        var13 = (((-329721066 ^ arg1) | (arg2 + 273) & ((-267 ^ (arg2 + arg1)) + 1836502259) ^ ((((((arg2 | (arg1 + arg2 - var7 + var12 - 1585623493)) ^ arg1) + -754 + -63555137) - arg2) | -265) - var12)) - -1104610253) - 757
    var14 = 1406873537 ^ (1079536373 + arg2) + 891
    var15 = var12 ^ var14
    var16 = var7 | var12
    result = ((var12 & (var15 | (var15 ^ var14))) | var14 - (var12 + var14) & 288 & arg1 + arg1 | -722) & var16
    return result
def func3(arg8, arg9):
    var10 = 0
    for var11 in (-2 & i for i in xrange(4)):
        var10 += (var11 ^ -5) | 4
    return var10
def func2(arg3, arg4):
    var5 = 0
    for var6 in (arg3 & i ^ arg3 for i in range(1)):
        var5 += arg3 - arg4
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 4'
    print 'arg_number: 17'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 43'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,def func4(arg17, arg18):
    def func5(arg19, arg20):
        var21 = -1665722108 - ((958 ^ 583) - arg19)
        var22 = var21 ^ arg19 & var21
        var23 = 115 ^ 1 - var22
        var24 = arg19 ^ var21
        var25 = arg20 & arg19
        result = arg20 | var21
        return result
    var26 = func5(arg18, arg17)
    var27 = arg17 - -1904580673
    var28 = -182 + arg18
    var29 = (var27 | arg18 ^ 627776933) ^ -19
    if arg18 < arg18:
        var30 = var26 | var29 ^ var29
    else:
        var30 = (arg17 & arg18) - -663 ^ arg17
    var31 = 203947489 ^ (var28 ^ -213 ^ var29)
    var32 = (var29 & arg17 | var27) & arg18
    if var31 < var29:
        var33 = (-928 ^ var29 | var32) + arg18
    else:
        var33 = var26 & ((var26 & var27) - -299)
    var34 = arg18 + -67 & var29
    var35 = (var31 ^ arg18) ^ var28 - var27
    var36 = (var26 - arg18 & arg18) | var28
    var37 = var32 ^ var34
    var38 = var29 + (842 | var34 - var34)
    var39 = var34 | var31
    var40 = var31 - var37
    var41 = arg18 & var27
    var42 = (var40 | 1422394558) ^ arg18 + arg18
    result = var31 - var26 | ((arg17 | arg18 + var39) + var34 ^ -453)
    return result
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var12 = func3(arg2, arg1)
    if var7 < arg2:
        var13 = arg2 & arg1
    else:
        var13 = (((-329721066 ^ arg1) | (arg2 + 273) & ((-267 ^ (arg2 + arg1)) + 1836502259) ^ ((((((arg2 | (arg1 + arg2 - var7 + var12 - 1585623493)) ^ arg1) + -754 + -63555137) - arg2) | -265) - var12)) - -1104610253) - 757
    var14 = 1406873537 ^ (1079536373 + arg2) + 891
    var15 = var12 ^ var14
    var16 = var7 | var12
    result = ((var12 & (var15 | (var15 ^ var14))) | var14 - (var12 + var14) & 288 & arg1 + arg1 | -722) & var16
    return result
def func3(arg8, arg9):
    var10 = 0
    for var11 in (-2 & i for i in xrange(4)):
        var10 += (var11 ^ -5) | 4
    return var10
def func2(arg3, arg4):
    var5 = 0
    for var6 in (arg3 & i ^ arg3 for i in range(1)):
        var5 += arg3 - arg4
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 4'
    print 'arg_number: 17'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 43'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,def func4(arg17, arg18):
    def func5(arg19, arg20):
        var21 = -1665722108 - ((958 ^ 583) - arg19)
        var22 = var21 ^ arg19 & var21
        var23 = 115 ^ 1 - var22
        var24 = arg19 ^ var21
        var25 = arg20 & arg19
        result = arg20 | var21
        return result
    var26 = func5(arg18, arg17)
    var27 = arg17 - -1904580673
    var28 = -182 + arg18
    var29 = (var27 | arg18 ^ 627776933) ^ -19
    if arg18 < arg18:
        var30 = var26 | var29 ^ var29
    else:
        var30 = (arg17 & arg18) - -663 ^ arg17
    var31 = 203947489 ^ (var28 ^ -213 ^ var29)
    var32 = (var29 & arg17 | var27) & arg18
    if var31 < var29:
        var33 = (-928 ^ var29 | var32) + arg18
    else:
        var33 = var26 & ((var26 & var27) - -299)
    var34 = arg18 + -67 & var29
    var35 = (var31 ^ arg18) ^ var28 - var27
    var36 = (var26 - arg18 & arg18) | var28
    var37 = var32 ^ var34
    var38 = var29 + (842 | var34 - var34)
    var39 = var34 | var31
    var40 = var31 - var37
    var41 = arg18 & var27
    var42 = (var40 | 1422394558) ^ arg18 + arg18
    result = var31 - var26 | ((arg17 | arg18 + var39) + var34 ^ -453)
    return result
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var12 = func3(arg2, arg1)
    if var7 < arg2:
        var13 = arg2 & arg1
    else:
        var13 = (((-329721066 ^ arg1) | (arg2 + 273) & ((-267 ^ (arg2 + arg1)) + 1836502259) ^ ((((((arg2 | (arg1 + arg2 - var7 + var12 - 1585623493)) ^ arg1) + -754 + -63555137) - arg2) | -265) - var12)) - -1104610253) - 757
    var14 = 1406873537 ^ (1079536373 + arg2) + 891
    var15 = var12 ^ var14
    var16 = var7 | var12
    result = ((var12 & (var15 | (var15 ^ var14))) | var14 - (var12 + var14) & 288 & arg1 + arg1 | -722) & var16
    return result
def func3(arg8, arg9):
    var10 = 0
    for var11 in (-2 & i for i in xrange(4)):
        var10 += (var11 ^ -5) | 4
    return var10
def func2(arg3, arg4):
    var5 = 0
    for var6 in (arg3 & i ^ arg3 for i in range(1)):
        var5 += arg3 - arg4
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 4'
    print 'arg_number: 17'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 43'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,def func4(arg17, arg18):
    def func5(arg19, arg20):
        var21 = -1665722108 - ((958 ^ 583) - arg19)
        var22 = var21 ^ arg19 & var21
        var23 = 115 ^ 1 - var22
        var24 = arg19 ^ var21
        var25 = arg20 & arg19
        result = arg20 | var21
        return result
    var26 = func5(arg18, arg17)
    var27 = arg17 - -1904580673
    var28 = -182 + arg18
    var29 = (var27 | arg18 ^ 627776933) ^ -19
    if arg18 < arg18:
        var30 = var26 | var29 ^ var29
    else:
        var30 = (arg17 & arg18) - -663 ^ arg17
    var31 = 203947489 ^ (var28 ^ -213 ^ var29)
    var32 = (var29 & arg17 | var27) & arg18
    if var31 < var29:
        var33 = (-928 ^ var29 | var32) + arg18
    else:
        var33 = var26 & ((var26 & var27) - -299)
    var34 = arg18 + -67 & var29
    var35 = (var31 ^ arg18) ^ var28 - var27
    var36 = (var26 - arg18 & arg18) | var28
    var37 = var32 ^ var34
    var38 = var29 + (842 | var34 - var34)
    var39 = var34 | var31
    var40 = var31 - var37
    var41 = arg18 & var27
    var42 = (var40 | 1422394558) ^ arg18 + arg18
    result = var31 - var26 | ((arg17 | arg18 + var39) + var34 ^ -453)
    return result
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var12 = func3(arg2, arg1)
    if var7 < arg2:
        var13 = arg2 & arg1
    else:
        var13 = (((-329721066 ^ arg1) | (arg2 + 273) & ((-267 ^ (arg2 + arg1)) + 1836502259) ^ ((((((arg2 | (arg1 + arg2 - var7 + var12 - 1585623493)) ^ arg1) + -754 + -63555137) - arg2) | -265) - var12)) - -1104610253) - 757
    var14 = 1406873537 ^ (1079536373 + arg2) + 891
    var15 = var12 ^ var14
    var16 = var7 | var12
    result = ((var12 & (var15 | (var15 ^ var14))) | var14 - (var12 + var14) & 288 & arg1 + arg1 | -722) & var16
    return result
def func3(arg8, arg9):
    var10 = 0
    for var11 in (-2 & i for i in xrange(4)):
        var10 += (var11 ^ -5) | 4
    return var10
def func2(arg3, arg4):
    var5 = 0
    for var6 in (arg3 & i ^ arg3 for i in range(1)):
        var5 += arg3 - arg4
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 4'
    print 'arg_number: 17'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 43'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,def func4(arg17, arg18):
    def func5(arg19, arg20):
        var21 = -1665722108 - ((958 ^ 583) - arg19)
        var22 = var21 ^ arg19 & var21
        var23 = 115 ^ 1 - var22
        var24 = arg19 ^ var21
        var25 = arg20 & arg19
        result = arg20 | var21
        return result
    var26 = func5(arg18, arg17)
    var27 = arg17 - -1904580673
    var28 = -182 + arg18
    var29 = (var27 | arg18 ^ 627776933) ^ -19
    if arg18 < arg18:
        var30 = var26 | var29 ^ var29
    else:
        var30 = (arg17 & arg18) - -663 ^ arg17
    var31 = 203947489 ^ (var28 ^ -213 ^ var29)
    var32 = (var29 & arg17 | var27) & arg18
    if var31 < var29:
        var33 = (-928 ^ var29 | var32) + arg18
    else:
        var33 = var26 & ((var26 & var27) - -299)
    var34 = arg18 + -67 & var29
    var35 = (var31 ^ arg18) ^ var28 - var27
    var36 = (var26 - arg18 & arg18) | var28
    var37 = var32 ^ var34
    var38 = var29 + (842 | var34 - var34)
    var39 = var34 | var31
    var40 = var31 - var37
    var41 = arg18 & var27
    var42 = (var40 | 1422394558) ^ arg18 + arg18
    result = var31 - var26 | ((arg17 | arg18 + var39) + var34 ^ -453)
    return result
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var12 = func3(arg2, arg1)
    if var7 < arg2:
        var13 = arg2 & arg1
    else:
        var13 = (((-329721066 ^ arg1) | (arg2 + 273) & ((-267 ^ (arg2 + arg1)) + 1836502259) ^ ((((((arg2 | (arg1 + arg2 - var7 + var12 - 1585623493)) ^ arg1) + -754 + -63555137) - arg2) | -265) - var12)) - -1104610253) - 757
    var14 = 1406873537 ^ (1079536373 + arg2) + 891
    var15 = var12 ^ var14
    var16 = var7 | var12
    result = ((var12 & (var15 | (var15 ^ var14))) | var14 - (var12 + var14) & 288 & arg1 + arg1 | -722) & var16
    return result
def func3(arg8, arg9):
    var10 = 0
    for var11 in (-2 & i for i in xrange(4)):
        var10 += (var11 ^ -5) | 4
    return var10
def func2(arg3, arg4):
    var5 = 0
    for var6 in (arg3 & i ^ arg3 for i in range(1)):
        var5 += arg3 - arg4
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 4'
    print 'arg_number: 17'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 43'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,def func4(arg17, arg18):
    def func5(arg19, arg20):
        var21 = -1665722108 - ((958 ^ 583) - arg19)
        var22 = var21 ^ arg19 & var21
        var23 = 115 ^ 1 - var22
        var24 = arg19 ^ var21
        var25 = arg20 & arg19
        result = arg20 | var21
        return result
    var26 = func5(arg18, arg17)
    var27 = arg17 - -1904580673
    var28 = -182 + arg18
    var29 = (var27 | arg18 ^ 627776933) ^ -19
    if arg18 < arg18:
        var30 = var26 | var29 ^ var29
    else:
        var30 = (arg17 & arg18) - -663 ^ arg17
    var31 = 203947489 ^ (var28 ^ -213 ^ var29)
    var32 = (var29 & arg17 | var27) & arg18
    if var31 < var29:
        var33 = (-928 ^ var29 | var32) + arg18
    else:
        var33 = var26 & ((var26 & var27) - -299)
    var34 = arg18 + -67 & var29
    var35 = (var31 ^ arg18) ^ var28 - var27
    var36 = (var26 - arg18 & arg18) | var28
    var37 = var32 ^ var34
    var38 = var29 + (842 | var34 - var34)
    var39 = var34 | var31
    var40 = var31 - var37
    var41 = arg18 & var27
    var42 = (var40 | 1422394558) ^ arg18 + arg18
    result = var31 - var26 | ((arg17 | arg18 + var39) + var34 ^ -453)
    return result
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var12 = func3(arg2, arg1)
    if var7 < arg2:
        var13 = arg2 & arg1
    else:
        var13 = (((-329721066 ^ arg1) | (arg2 + 273) & ((-267 ^ (arg2 + arg1)) + 1836502259) ^ ((((((arg2 | (arg1 + arg2 - var7 + var12 - 1585623493)) ^ arg1) + -754 + -63555137) - arg2) | -265) - var12)) - -1104610253) - 757
    var14 = 1406873537 ^ (1079536373 + arg2) + 891
    var15 = var12 ^ var14
    var16 = var7 | var12
    result = ((var12 & (var15 | (var15 ^ var14))) | var14 - (var12 + var14) & 288 & arg1 + arg1 | -722) & var16
    return result
def func3(arg8, arg9):
    var10 = 0
    for var11 in (-2 & i for i in xrange(4)):
        var10 += (var11 ^ -5) | 4
    return var10
def func2(arg3, arg4):
    var5 = 0
    for var6 in (arg3 & i ^ arg3 for i in range(1)):
        var5 += arg3 - arg4
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 4'
    print 'arg_number: 17'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 43'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,def func4(arg17, arg18):
    def func5(arg19, arg20):
        var21 = -1665722108 - ((958 ^ 583) - arg19)
        var22 = var21 ^ arg19 & var21
        var23 = 115 ^ 1 - var22
        var24 = arg19 ^ var21
        var25 = arg20 & arg19
        result = arg20 | var21
        return result
    var26 = func5(arg18, arg17)
    var27 = arg17 - -1904580673
    var28 = -182 + arg18
    var29 = (var27 | arg18 ^ 627776933) ^ -19
    if arg18 < arg18:
        var30 = var26 | var29 ^ var29
    else:
        var30 = (arg17 & arg18) - -663 ^ arg17
    var31 = 203947489 ^ (var28 ^ -213 ^ var29)
    var32 = (var29 & arg17 | var27) & arg18
    if var31 < var29:
        var33 = (-928 ^ var29 | var32) + arg18
    else:
        var33 = var26 & ((var26 & var27) - -299)
    var34 = arg18 + -67 & var29
    var35 = (var31 ^ arg18) ^ var28 - var27
    var36 = (var26 - arg18 & arg18) | var28
    var37 = var32 ^ var34
    var38 = var29 + (842 | var34 - var34)
    var39 = var34 | var31
    var40 = var31 - var37
    var41 = arg18 & var27
    var42 = (var40 | 1422394558) ^ arg18 + arg18
    result = var31 - var26 | ((arg17 | arg18 + var39) + var34 ^ -453)
    return result
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var12 = func3(arg2, arg1)
    if var7 < arg2:
        var13 = arg2 & arg1
    else:
        var13 = (((-329721066 ^ arg1) | (arg2 + 273) & ((-267 ^ (arg2 + arg1)) + 1836502259) ^ ((((((arg2 | (arg1 + arg2 - var7 + var12 - 1585623493)) ^ arg1) + -754 + -63555137) - arg2) | -265) - var12)) - -1104610253) - 757
    var14 = 1406873537 ^ (1079536373 + arg2) + 891
    var15 = var12 ^ var14
    var16 = var7 | var12
    result = ((var12 & (var15 | (var15 ^ var14))) | var14 - (var12 + var14) & 288 & arg1 + arg1 | -722) & var16
    return result
def func3(arg8, arg9):
    var10 = 0
    for var11 in (-2 & i for i in xrange(4)):
        var10 += (var11 ^ -5) | 4
    return var10
def func2(arg3, arg4):
    var5 = 0
    for var6 in (arg3 & i ^ arg3 for i in range(1)):
        var5 += arg3 - arg4
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 4'
    print 'arg_number: 17'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 43'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,def func4(arg17, arg18):
    def func5(arg19, arg20):
        var21 = -1665722108 - ((958 ^ 583) - arg19)
        var22 = var21 ^ arg19 & var21
        var23 = 115 ^ 1 - var22
        var24 = arg19 ^ var21
        var25 = arg20 & arg19
        result = arg20 | var21
        return result
    var26 = func5(arg18, arg17)
    var27 = arg17 - -1904580673
    var28 = -182 + arg18
    var29 = (var27 | arg18 ^ 627776933) ^ -19
    if arg18 < arg18:
        var30 = var26 | var29 ^ var29
    else:
        var30 = (arg17 & arg18) - -663 ^ arg17
    var31 = 203947489 ^ (var28 ^ -213 ^ var29)
    var32 = (var29 & arg17 | var27) & arg18
    if var31 < var29:
        var33 = (-928 ^ var29 | var32) + arg18
    else:
        var33 = var26 & ((var26 & var27) - -299)
    var34 = arg18 + -67 & var29
    var35 = (var31 ^ arg18) ^ var28 - var27
    var36 = (var26 - arg18 & arg18) | var28
    var37 = var32 ^ var34
    var38 = var29 + (842 | var34 - var34)
    var39 = var34 | var31
    var40 = var31 - var37
    var41 = arg18 & var27
    var42 = (var40 | 1422394558) ^ arg18 + arg18
    result = var31 - var26 | ((arg17 | arg18 + var39) + var34 ^ -453)
    return result
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var12 = func3(arg2, arg1)
    if var7 < arg2:
        var13 = arg2 & arg1
    else:
        var13 = (((-329721066 ^ arg1) | (arg2 + 273) & ((-267 ^ (arg2 + arg1)) + 1836502259) ^ ((((((arg2 | (arg1 + arg2 - var7 + var12 - 1585623493)) ^ arg1) + -754 + -63555137) - arg2) | -265) - var12)) - -1104610253) - 757
    var14 = 1406873537 ^ (1079536373 + arg2) + 891
    var15 = var12 ^ var14
    var16 = var7 | var12
    result = ((var12 & (var15 | (var15 ^ var14))) | var14 - (var12 + var14) & 288 & arg1 + arg1 | -722) & var16
    return result
def func3(arg8, arg9):
    var10 = 0
    for var11 in (-2 & i for i in xrange(4)):
        var10 += (var11 ^ -5) | 4
    return var10
def func2(arg3, arg4):
    var5 = 0
    for var6 in (arg3 & i ^ arg3 for i in range(1)):
        var5 += arg3 - arg4
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 4'
    print 'arg_number: 17'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 43'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,def func4(arg17, arg18):
    def func5(arg19, arg20):
        var21 = -1665722108 - ((958 ^ 583) - arg19)
        var22 = var21 ^ arg19 & var21
        var23 = 115 ^ 1 - var22
        var24 = arg19 ^ var21
        var25 = arg20 & arg19
        result = arg20 | var21
        return result
    var26 = func5(arg18, arg17)
    var27 = arg17 - -1904580673
    var28 = -182 + arg18
    var29 = (var27 | arg18 ^ 627776933) ^ -19
    if arg18 < arg18:
        var30 = var26 | var29 ^ var29
    else:
        var30 = (arg17 & arg18) - -663 ^ arg17
    var31 = 203947489 ^ (var28 ^ -213 ^ var29)
    var32 = (var29 & arg17 | var27) & arg18
    if var31 < var29:
        var33 = (-928 ^ var29 | var32) + arg18
    else:
        var33 = var26 & ((var26 & var27) - -299)
    var34 = arg18 + -67 & var29
    var35 = (var31 ^ arg18) ^ var28 - var27
    var36 = (var26 - arg18 & arg18) | var28
    var37 = var32 ^ var34
    var38 = var29 + (842 | var34 - var34)
    var39 = var34 | var31
    var40 = var31 - var37
    var41 = arg18 & var27
    var42 = (var40 | 1422394558) ^ arg18 + arg18
    result = var31 - var26 | ((arg17 | arg18 + var39) + var34 ^ -453)
    return result
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var12 = func3(arg2, arg1)
    if var7 < arg2:
        var13 = arg2 & arg1
    else:
        var13 = (((-329721066 ^ arg1) | (arg2 + 273) & ((-267 ^ (arg2 + arg1)) + 1836502259) ^ ((((((arg2 | (arg1 + arg2 - var7 + var12 - 1585623493)) ^ arg1) + -754 + -63555137) - arg2) | -265) - var12)) - -1104610253) - 757
    var14 = 1406873537 ^ (1079536373 + arg2) + 891
    var15 = var12 ^ var14
    var16 = var7 | var12
    result = ((var12 & (var15 | (var15 ^ var14))) | var14 - (var12 + var14) & 288 & arg1 + arg1 | -722) & var16
    return result
def func3(arg8, arg9):
    var10 = 0
    for var11 in (-2 & i for i in xrange(4)):
        var10 += (var11 ^ -5) | 4
    return var10
def func2(arg3, arg4):
    var5 = 0
    for var6 in (arg3 & i ^ arg3 for i in range(1)):
        var5 += arg3 - arg4
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 4'
    print 'arg_number: 17'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 43'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,def func4(arg17, arg18):
    def func5(arg19, arg20):
        var21 = -1665722108 - ((958 ^ 583) - arg19)
        var22 = var21 ^ arg19 & var21
        var23 = 115 ^ 1 - var22
        var24 = arg19 ^ var21
        var25 = arg20 & arg19
        result = arg20 | var21
        return result
    var26 = func5(arg18, arg17)
    var27 = arg17 - -1904580673
    var28 = -182 + arg18
    var29 = (var27 | arg18 ^ 627776933) ^ -19
    if arg18 < arg18:
        var30 = var26 | var29 ^ var29
    else:
        var30 = (arg17 & arg18) - -663 ^ arg17
    var31 = 203947489 ^ (var28 ^ -213 ^ var29)
    var32 = (var29 & arg17 | var27) & arg18
    if var31 < var29:
        var33 = (-928 ^ var29 | var32) + arg18
    else:
        var33 = var26 & ((var26 & var27) - -299)
    var34 = arg18 + -67 & var29
    var35 = (var31 ^ arg18) ^ var28 - var27
    var36 = (var26 - arg18 & arg18) | var28
    var37 = var32 ^ var34
    var38 = var29 + (842 | var34 - var34)
    var39 = var34 | var31
    var40 = var31 - var37
    var41 = arg18 & var27
    var42 = (var40 | 1422394558) ^ arg18 + arg18
    result = var31 - var26 | ((arg17 | arg18 + var39) + var34 ^ -453)
    return result
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var12 = func3(arg2, arg1)
    if var7 < arg2:
        var13 = arg2 & arg1
    else:
        var13 = (((-329721066 ^ arg1) | (arg2 + 273) & ((-267 ^ (arg2 + arg1)) + 1836502259) ^ ((((((arg2 | (arg1 + arg2 - var7 + var12 - 1585623493)) ^ arg1) + -754 + -63555137) - arg2) | -265) - var12)) - -1104610253) - 757
    var14 = 1406873537 ^ (1079536373 + arg2) + 891
    var15 = var12 ^ var14
    var16 = var7 | var12
    result = ((var12 & (var15 | (var15 ^ var14))) | var14 - (var12 + var14) & 288 & arg1 + arg1 | -722) & var16
    return result
def func3(arg8, arg9):
    var10 = 0
    for var11 in (-2 & i for i in xrange(4)):
        var10 += (var11 ^ -5) | 4
    return var10
def func2(arg3, arg4):
    var5 = 0
    for var6 in (arg3 & i ^ arg3 for i in range(1)):
        var5 += arg3 - arg4
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 4'
    print 'arg_number: 17'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 43'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,def func4(arg17, arg18):
    def func5(arg19, arg20):
        var21 = -1665722108 - ((958 ^ 583) - arg19)
        var22 = var21 ^ arg19 & var21
        var23 = 115 ^ 1 - var22
        var24 = arg19 ^ var21
        var25 = arg20 & arg19
        result = arg20 | var21
        return result
    var26 = func5(arg18, arg17)
    var27 = arg17 - -1904580673
    var28 = -182 + arg18
    var29 = (var27 | arg18 ^ 627776933) ^ -19
    if arg18 < arg18:
        var30 = var26 | var29 ^ var29
    else:
        var30 = (arg17 & arg18) - -663 ^ arg17
    var31 = 203947489 ^ (var28 ^ -213 ^ var29)
    var32 = (var29 & arg17 | var27) & arg18
    if var31 < var29:
        var33 = (-928 ^ var29 | var32) + arg18
    else:
        var33 = var26 & ((var26 & var27) - -299)
    var34 = arg18 + -67 & var29
    var35 = (var31 ^ arg18) ^ var28 - var27
    var36 = (var26 - arg18 & arg18) | var28
    var37 = var32 ^ var34
    var38 = var29 + (842 | var34 - var34)
    var39 = var34 | var31
    var40 = var31 - var37
    var41 = arg18 & var27
    var42 = (var40 | 1422394558) ^ arg18 + arg18
    result = var31 - var26 | ((arg17 | arg18 + var39) + var34 ^ -453)
    return result
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var12 = func3(arg2, arg1)
    if var7 < arg2:
        var13 = arg2 & arg1
    else:
        var13 = (((-329721066 ^ arg1) | (arg2 + 273) & ((-267 ^ (arg2 + arg1)) + 1836502259) ^ ((((((arg2 | (arg1 + arg2 - var7 + var12 - 1585623493)) ^ arg1) + -754 + -63555137) - arg2) | -265) - var12)) - -1104610253) - 757
    var14 = 1406873537 ^ (1079536373 + arg2) + 891
    var15 = var12 ^ var14
    var16 = var7 | var12
    result = ((var12 & (var15 | (var15 ^ var14))) | var14 - (var12 + var14) & 288 & arg1 + arg1 | -722) & var16
    return result
def func3(arg8, arg9):
    var10 = 0
    for var11 in (-2 & i for i in xrange(4)):
        var10 += (var11 ^ -5) | 4
    return var10
def func2(arg3, arg4):
    var5 = 0
    for var6 in (arg3 & i ^ arg3 for i in range(1)):
        var5 += arg3 - arg4
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 4'
    print 'arg_number: 17'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 43'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,
